create database dbhorariosena;
use dbhorariosena;

create table Localidad (
idLocalidad int Auto_Increment not null primary key,
nombreLocalidad varchar(40) not null
);

create table Sede(
idSede int Auto_Increment not null primary key,
nombreSede varchar (50) not null,
direccionSede varchar (50) not null,
estadoSede boolean Not Null,
imagenSede Blob Not Null,
idLocalidadFK int Not Null
);

create table Ambiente (
idAmbiente int auto_increment not null primary key,
numeroAmbiente int (7) not null,
horasDisponibles int (10) not null,
estadoAmbiente boolean not null,
idSedeFK int not null  
);

create table Programa(
idPrograma int auto_increment not null primary key,
nombrePrograma Varchar (50) not null,
descripcionProgram Varchar(120) not null,
versionPrograma int not null,
estadoPrograma boolean not null
);
create table Rol(
idRol int primary key auto_increment,
nombreRol varchar(25),
estadoRol boolean not null
);

create table Usuario(
idUsuario int primary key auto_increment,
numeroIdent bigint (15) not null,
nombreUsuario varchar(70) not null,
apellidoUsuario varchar(70) not null,
correoUsuario varchar(100) not null,
telefonoUsuario bigint(10) not null,
contrasenaUsuario blob not null,
estadoUsuario boolean not null,
imagenUsuario blob not null,
idRolFK int not null,
idTpoIdentificacionFK int not null
);

 create table TipoIdentificacion (
 idTipoIdentificacion int primary key auto_increment,
 nombreTipoIdentificacion varchar(50) not null,
 estadoTipoIdentificacion boolean not null
 );

create table Instructor(
idInstructor int primary key auto_increment,
nombreInstructor varchar(50) not null,
apellidoInstructor varchar(50) not null,
estadoInstructor boolean not null,
horasSemanales int (3) not null,
imagenInstructor blob not null,
idTpoIdentificacionFK int not null
);

create table Trimestre(
idTrimestre int primary key auto_increment,
nombreTrimestre varchar(40) not null,
fechaInicio date not null,
fechaFin date not null ,
estadoTrimestre boolean not null
);

Create table Tematica(
idTematica Int Primary Key Auto_increment,
nombreTematica Varchar (70) Not Null,
descripcionTematica Varchar (150) Not Null,
horasMaximasM Int (4) Not Null,
horasMaxmasS Int (4) Not Null,
trimestre Int Not Null,
estadoTematica Boolean Not Null,
idProgramaFK Int Not Null
);

Create table TematicaInstructor(
idTematicaInstructor Int Primary Key Auto_increment,
idTematicaFK Int Not NUll,
idInstructorFK Int Not NUll
);

Create table Ficha(
idFicha Int Primary Key Auto_increment,
nombreFicha Varchar (25) Not Null,
estadoFicha Boolean Not Null,
idProgramaFK Int Not Null,
idJornadaFK Int Not Null
);

Create table Jornada(
idJornada Int Primary Key Auto_increment,
nombreJornada Varchar (35) Not Null,
diaIniJor Varchar (10) Not Null,
diaFinJor Varchar (10) Not Null,
estadoJornada Boolean Not Null
);

create table Bloque(
idBloque int auto_increment not null primary key,
idPosicion int (2) not null,
estadoBloque boolean not null,
idAmbienteFK int not null,
idFichaFK int not null,
idInstructorFK int not null,
idSedeFK int not null,
idJornadaFK int not null,
idTrimestreFK int not null, 
idTematicaFK int not null
);

alter table Usuario add constraint UsuRol 
foreign key (idRolFK) references Rol(idRol);

alter table Instructor add constraint InstructorTipoD 
foreign key (idTpoIdentificacionFK) references TipoIdentificacion(idTipoIdentificacion);

alter table Usuario add constraint UsuTipoD 
foreign key (idTpoIdentificacionFK) references TipoIdentificacion(idTipoIdentificacion);

alter table TematicaInstructor add constraint InstructorTematicaI 
foreign key (idInstructorFK) references Instructor(idInstructor);

alter table TematicaInstructor add constraint InstructorTematicaT 
foreign key (idTematicaFK) references Tematica(idTematica);

alter table Ficha add constraint ProgramaFicha
foreign key (idProgramaFK) references Programa(idPrograma);

alter table Ficha add constraint JornadaFicha
foreign key (idJornadaFK) references Jornada(idJornada);

alter table sede add constraint sedeLocal
foreign key (idLocalidadFK) references localidad(idLocalidad);

alter table ambiente add constraint ambienteSede
foreign key (idSedeFK) references sede(idSede);

alter table bloque add constraint bloqueAmbiente
foreign key (idAmbienteFK) references ambiente(idAmbiente);

alter table bloque add constraint bloqueSede
foreign key (idSedeFK) references sede(idSede); 
 
alter table tematica add constraint tematicaPrograma
foreign key (idProgramaFK) references programa(idPrograma);

alter table bloque add constraint bloqueTrimestre
foreign key (idTrimestreFK) references trimestre(idTrimestre);
 
 alter table bloque add constraint bloqueJornada
foreign key (idJornadaFK) references Jornada(idJornada);

 alter table bloque add constraint bloqueFicha
foreign key (idFichaFK) references Ficha(idFicha);

 alter table bloque add constraint bloqueTematica
foreign key (idTematicaFK) references Tematica(idTematica);

 alter table bloque add constraint bloqueInstructor
foreign key (idInstructorFK) references Instructor(idInstructor);


INSERT INTO localidad (nombreLocalidad) VALUES
('Usaquén'),
('Chapinero'),
('Santa Fe'),
('San Cristóbal'),
('Usme'),
('Tunjuelito'),
('Bosa'),
('Kennedy'),
('Fontibón'),
('Engativá'),
('Suba'),
('Barrios Unidos'),
('Teusaquillo'),
('Los Mártires'),
('Antonio Nariño'),
('Puente Aranda'),
('Candelaria'),
('Rafael Uribe Uribe'),
('Ciudad Bolívar'),
('Sumapaz');

INSERT INTO Rol (nombreRol,estadoRol) VALUES
('Admin',true),
('Auxiliar',true)
;
select * from TipoIdentificacion;

delimiter //

create procedure spLogin (in numIdentificacion bigint (15), in nomTipoDoc varchar(50), in contrasenaUsu varchar (35))
begin 
SELECT u.idUsuario,u.numeroIdent, u.contrasenaUsuario, td.nombreTipoIdentificacion FROM usuario u inner join tipoidentificacion td on u.idTpoIdentificacionFK = td.idTipoIdentificacion
where numeroIdent= numIdentificacion or contrasenaUsuario=contrasenaUsu or nombreTipoIdentificacion = nomTipoDoc AND estadoUsuario=1;
end;

//


DELIMITER //
CREATE PROCEDURE SP_CodSedeAmbiente(IN CodSedeFK int)
BEGIN
    SELECT
        s.idSede, s.nombreSede
    FROM
        Sede s
    WHERE
	s.idSede = codSedeFK;
END;
//
DELIMITER ;
